@model supply.ViewModels.VmInvoiceModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create Invoice</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container mt-4">
        <h2>Create new Invoice</h2>

        <form asp-action="Create" method="post">
            <div class="mb-3">
                <label asp-for="Invoice.InvoiceNumber" class="form-label">Invoice Number</label>
                <input asp-for="Invoice.InvoiceNumber" class="form-control" />
            </div>

            <div class="mb-3">
                <label asp-for="Invoice.InvoiceDate" class="form-label">Invoice Date</label>
                <input asp-for="Invoice.InvoiceDate" type="date" class="form-control" />
            </div>


            <table class="table table-bordered table-striped" id="InvoiceProductsTable">
                <thead class="table-dark">
                    <tr>
                        <th>Product</th>
                        <th>QTY</th>
                        <th>Unit Price</th>
                        <th>Total Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.InvoiceItems.Count; i++)
                    {
                        <tr>
                            <td>
                                <select asp-for="InvoiceItems[@i].ProductId" class="form-select product-select" asp-items="@(new SelectList(Model.ProductList, "ProductId", "Name"))">
                                    <option value="">Select Product</option>
                                </select>
                            </td>
                            <td><input name="InvoiceItems[${index}].Qty" class="form-control qty" /></td>
                            <td><input name="InvoiceItems[${index}].Vprice" class="form-control price" /></td>
                            <td><input name="InvoiceItems[${index}].Tprice" class="form-control item-total" readonly /></td>
                        </tr>
                    }
                </tbody>
                <div class="text-end mt-3">
                    <label class="fw-bold">Total Invoice Amount: </label>
                    <span id="invoice-total">0.00</span>
                </div>

                <input type="hidden" name="Invoice.TotalAmount" id="TotalAmount" />

            </table>

            <button type="button" id="addItem" class="btn btn-secondary mb-3">+ Add Item</button>

            <div>
                <button type="submit" class="btn btn-success">Save Invoice</button>
                <a asp-action="Index" class="btn btn-secondary">Back</a>
            </div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function calculateRowTotal(row) {
            const qty = parseFloat(row.find('.qty-input').val()) || 0;
            const price = parseFloat(row.find('.price-input').val()) || 0;
            const total = qty * price;
            row.find('.total-price').val(total.toFixed(2));
        }

        $(document).ready(function () {
            // حساب السعر الإجمالي لكل صف عند تغير الكمية أو السعر
            $('#invoiceItemsBody').on('input', '.qty-input, .price-input', function () {
                const row = $(this).closest('tr');
                calculateRowTotal(row);
            });

             $(function () {
            let index = @Model.InvoiceItems.Count;

            $('#addItem').click(function () {
                let row = `
                <tr>
                    <td>
                        <select name="InvoiceItems[${index}].ProductId" class="form-select">
                            <option value="">-- Select --</option>
        @foreach (var product in Model.ProductList)
        {
                                    <option value="@product.ProductId">@product.Name</option>
        }
                        </select>
                    </td>
                    <td><input name="InvoiceItems[${index}].Qty" class="form-control" /></td>
                    <td><input name="InvoiceItems[${index}].Vprice" class="form-control" /></td>
                    <td><input name="InvoiceItems[${index}].Tprice" class="form-control" readonly /></td>
                    <td class="text-center"><button type="button" class="btn btn-sm btn-outline-danger removeItem">×</button></td>
                </tr>`;
               $('#InvoiceProductsTable tbody').append(row);

                index++;
                        updateTotals();
        document.querySelectorAll('.qty, .price').forEach(input => {
            input.addEventListener('input', updateTotals);
        });

            });

            $(document).on('click', '.removeItem', function () {
                $(this).closest('tr').remove();
            });
        });
            // حذف صف
            $('#invoiceItemsBody').on('click', '.remove-row', function () {
                $(this).closest('tr').remove();
                // إعادة ترقيم الـ Index لأسماء الحقول بعد الحذف
                $('#invoiceItemsBody tr').each(function (i, tr) {
                    $(tr).find('select, input').each(function () {
                        let name = $(this).attr('name');
                        if (name) {
                            let newName = name.replace(/\d+/, i);
                            $(this).attr('name', newName);
                        }
                    });
                });
            });
        });
             function updateTotals() {
            let total = 0;
            document.querySelectorAll('#InvoiceProductsTable tbody tr').forEach(row => {
                const qty = parseFloat(row.querySelector('.qty').value) || 0;
                const price = parseFloat(row.querySelector('.price').value) || 0;
                const itemTotal = qty * price;
                row.querySelector('.item-total').value = itemTotal.toFixed(2);
                total += itemTotal;
            });

            document.getElementById('invoice-total').textContent = total.toFixed(2);
            document.getElementById('TotalAmount').value = total.toFixed(2);
        }

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.qty, .price').forEach(input => {
                input.addEventListener('input', updateTotals);
            });
            updateTotals(); // Initial total
        });
    </script>
</body>
</html>
